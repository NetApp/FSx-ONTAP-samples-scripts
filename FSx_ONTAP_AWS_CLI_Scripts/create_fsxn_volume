#!/bin/bash
################################################################################
# THIS SOFTWARE IS PROVIDED BY NETAPP "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL NETAPP BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR'
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
################################################################################
#
# This script is used to create an FSxN volume under the specified SVM. The
# FSxN "filesystem" is implied by the SVM ID.
################################################################################

################################################################################
# This function just outputs the usage information and exits.
################################################################################
usage () {
cat 1>&2 <<EOF
Usage: $(basename $0) -i svmID -n volumeName [-r region] [-s size]
where
  svmID: is the SVM ID in the filesystem you want to create the volume.
  volumeName: is the name you want to assign the volume.
  region: is the AWS region where the FSxN filesystem resides.
  size: is size, in megabytes, you want the filesystem. Default is 20.
EOF
  exit 1
}

################################################################################
# Main logic starts here.
################################################################################
tmpout=/tmp/create_volume.$$
trap 'rm -f $tmpout' exit
#
# Set some defaults.
size=20
region=$(aws configure list | egrep '^.*egion ' | awk '{print $2}')
#
# Process command line arguments.
while getopts "i:n:r:s:" option; do
  case $option in
    i) svmId=$OPTARG
      ;;
    n) volumeName=$OPTARG
      ;;
    r) region=$OPTARG
      ;;
    s) size=$OPTARG
      ;;
    *) usage
      ;;
  esac
done
#
# Ensure all the required parameters have been provided.
if [ -z "$volumeName" -o -z "$svmId" ]; then
  echo "Error, you must provide a volume name and SVM ID." 1>&2
  usage
fi

aws fsx create-volume --volume-type ONTAP --name $volumeName --ontap-configuration "{
  \"JunctionPath\": \"/$volumeName\",
  \"SecurityStyle\": \"UNIX\",
  \"SizeInMegabytes\" : $size,
  \"StorageEfficiencyEnabled\": true, 
  \"StorageVirtualMachineId\": \"$svmId\",
  \"TieringPolicy\" : {\"CoolingPeriod\": 31, \"Name\": \"SNAPSHOT_ONLY\"},
  \"OntapVolumeType\": \"RW\",
  \"SnapshotPolicy\": \"default\"}" --region=$region --output=json > $tmpout 2>&1

if [ $? != "0" ]; then
  echo "Failed to create the FSxN volume." 1>&2
  cat $tmpout 1>&2
  exit 1
else
  status=$(jq -r .Volume.Lifecycle $tmpout 2> /dev/null)
  if [ "$status" == "CREATING" -o "$status" == "PENDING" ]; then
    echo "FSxN volume '$volumeName'($(jq -r .Volume.VolumeId $tmpout)) is being created."
    exit 0
  else
    echo "Unknown status '$status'. Complete output returned from the AWS api:" 1>&2
    cat $tmpout 1>&2
    exit 1
  fi
fi
