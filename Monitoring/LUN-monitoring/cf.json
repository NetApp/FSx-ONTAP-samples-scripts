{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Transform": "AWS::LanguageExtensions",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [
				{
					"Label": {
						"default": "Network Configuration"
					},
					"Parameters": [
						"VpcId",
						"SubnetIds",
						"SecurityGroupIds",
						"CreateSecretManagerEndpoint",
						"CreateCloudWatchEndpoint"
					]
				},
				{
					"Label": {
						"default": "Password Configuration"
					},
					"Parameters": [
						"CreatePasswordSecret",
						"FileSystemPassword",
						"PasswordSecretArn",
						"PasswordSecretKey"
					]
				},
				{
					"Label": {
						"default": "General Configuration"
					},
					"Parameters": [
						"FileSystemId"
					]
				}
			],
			"ParameterLabels": {
				"VpcId": {
					"default": "VPC ID"
				},
				"SubnetIds": {
					"default": "Subnet IDs"
				},
				"SecurityGroupIds": {
					"default": "Security Group IDs"
				},
				"CreateSecretManagerEndpoint": {
					"default": "Create Secret Manager Endpoint"
				},
				"CreateCloudWatchEndpoint": {
					"default": "Create CloudWatch Endpoint"
				},
				"CreatePasswordSecret": {
					"default": "Create Secret for the password"
				},
				"FileSystemPassword": {
					"default": "FSX admin password"
				},
				"PasswordSecretArn": {
					"default": "Secret Manager FSX admin password ARN"
				},
				"PasswordSecretKey": {
					"default": "Secret Manager FSX admin password key"
				}
			}
		}
	},
	"Parameters": {
		"FileSystemId": {
			"Description": "FSx ID",
			"Type": "String"
		},
		"SubnetIds": {
			"Type": "List<AWS::EC2::Subnet::Id>",
			"Description": "List of subnet IDs for Lambda-link function"
		},
		"SecurityGroupIds": {
			"Type": "List<AWS::EC2::SecurityGroup::Id>",
			"Description": "List of security group IDs for Lambda-link function"
		},
		"PasswordSecretArn": {
			"Type": "String",
			"Description": "Secret Manager ARN that hold the fsxadmin password"
		},
		"PasswordSecretKey": {
			"Type": "String",
			"Description": "Secret Manager key that hold the fsxadmin password"
		},
		"CreatePasswordSecret": {
			"Type": "String",
			"AllowedValues": [
				"true",
				"false"
			],
			"Default": "false"
		},
		"FileSystemPassword": {
			"NoEcho": true,
			"Type": "String",
			"Description": "Filesystem fsxadmin password to be set as secret"
		},
		"CreateSecretManagerEndpoint": {
			"Type": "String",
			"AllowedValues": [
				"true",
				"false"
			],
			"Default": "false"
		},
		"CreateCloudWatchEndpoint": {
			"Type": "String",
			"AllowedValues": [
				"true",
				"false"
			],
			"Default": "false"
		},
		"VpcId": {
			"Type": "AWS::EC2::VPC::Id"
		}
	},
	"Conditions": {
		"NeedToCreateSSMEP": {
			"Fn::Equals": [
				{
					"Ref": "CreateSecretManagerEndpoint"
				},
				"true"
			]
		},
		"NeedToCreateCWEP": {
			"Fn::Equals": [
				{
					"Ref": "CreateCloudWatchEndpoint"
				},
				"true"
			]
		},
		"NeedToCreateSecret": {
			"Fn::Equals": [
				{
					"Ref": "CreatePasswordSecret"
				},
				"true"
			]
		}
	},
	"Resources": {
		"Secret": {
			"Type": "AWS::SecretsManager::Secret",
			"Condition": "NeedToCreateSecret",
			"DeletionPolicy": "Delete",
			"UpdateReplacePolicy": "Retain",
			"Properties": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							"LunSecret",
							{
								"Ref": "FileSystemId"
							}
						]
					]
				},
				"SecretString": {
					"Fn::ToJsonString": {
						"password": {
							"Ref": "FileSystemPassword"
						}
					}
				}
			}
		},
		"SecretManagerEndPoint": {
			"Type": "AWS::EC2::VPCEndpoint",
			"Condition": "NeedToCreateSSMEP",
			"Properties": {
				"VpcId": {
					"Ref": "VpcId"
				},
				"ServiceName": {
					"Fn::Sub": [
						"com.amazonaws.${Region}.secretsmanager",
						{
							"Region": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"SubnetIds": {
					"Ref": "SubnetIds"
				},
				"VpcEndpointType": "Interface",
				"PrivateDnsEnabled": true
			}
		},
		"CloudWatchEndPoint": {
			"Type": "AWS::EC2::VPCEndpoint",
			"Condition": "NeedToCreateCWEP",
			"Properties": {
				"VpcId": {
					"Ref": "VpcId"
				},
				"ServiceName": {
					"Fn::Sub": [
						"com.amazonaws.${Region}.monitoring",
						{
							"Region": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"SubnetIds": {
					"Ref": "SubnetIds"
				},
				"VpcEndpointType": "Interface",
				"PrivateDnsEnabled": true
			}
		},
		"LambdaRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": {
					"Fn::Sub": [
						"LambdaLunRole-${StackName}",
						{
							"StackName": {
								"Ref": "AWS::StackName"
							}
						}
					]
				},
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": {
						"Effect": "Allow",
						"Principal": {
							"Service": "lambda.amazonaws.com"
						},
						"Action": "sts:AssumeRole"
					}
				},
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
					"arn:aws:iam::aws:policy/service-role/AWSLambdaRole"
				],
				"Policies": [
					{
						"PolicyName": "LambdaPolicy",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"ec2:CreateNetworkInterface",
										"ec2:DescribeNetworkInterfaces",
										"ec2:DeleteNetworkInterface",
										"ec2:AssignPrivateIpAddresses",
										"ec2:UnassignPrivateIpAddresses",
										"cloudwatch:PutMetricData"
									],
									"Resource": "*"
								},
								{
									"Effect": "Allow",
									"Action": "secretsmanager:GetSecretValue",
									"Resource": {
										"Fn::If": [
											"NeedToCreateSecret",
											{
												"Fn::GetAtt": [
													"Secret",
													"Id"
												]
											},
											{
												"Ref": "PasswordSecretArn"
											}
										]
									}
								}
							]
						}
					}
				]
			}
		},
		"SchedulerRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": {
					"Fn::Sub": [
						"SchedulerLunkRole-${StackName}",
						{
							"StackName": {
								"Ref": "AWS::StackName"
							}
						}
					]
				},
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": {
						"Effect": "Allow",
						"Principal": {
							"Service": "scheduler.amazonaws.com"
						},
						"Action": "sts:AssumeRole"
					}
				},
				"Policies": [
					{
						"PolicyName": "StatePolicy",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"lambda:InvokeFunction"
									],
									"Resource": {
										"Fn::GetAtt": [
											"LambdaFunction",
											"Arn"
										]
									}
								}
							]
						}
					}
				]
			}
		},
		"LambdaFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"FunctionName": {
					"Fn::Join": [
						"-",
						[
							"LunLambda",
							{
								"Ref": "FileSystemId"
							}
						]
					]
				},
				"Code": {
					"ImageUri": {
						"Fn::Sub": [
							"052582346341.dkr.ecr.${Region}.amazonaws.com/lun_monitoring:latest",
							{
								"Region": {
									"Ref": "AWS::Region"
								}
							}
						]
					}
				},
				"Role": {
					"Fn::GetAtt": [
						"LambdaRole",
						"Arn"
					]
				},
				"VpcConfig": {
					"SecurityGroupIds": {
						"Ref": "SecurityGroupIds"
					},
					"SubnetIds": {
						"Ref": "SubnetIds"
					}
				},
				"PackageType": "Image",
				"Timeout": 10,
				"Environment": {
					"Variables": {
						"NODE_TLS_REJECT_UNAUTHORIZED": "0",
						"Version": "1.0.0",
						"FileSystemId": {
							"Ref": "FileSystemId"
						},
						"Region": {
							"Ref": "AWS::Region"
						},
						"SecretArn": {
							"Fn::If": [
								"NeedToCreateSecret",
								{
									"Fn::GetAtt": [
										"Secret",
										"Id"
									]
								},
								{
									"Ref": "PasswordSecretArn"
								}
							]
						},
						"SecretKey": {
							"Fn::If": [
								"NeedToCreateSecret",
								"password",
								{
									"Ref": "PasswordSecretKey"
								}
							]
						}
					}
				}
			}
		},
		"Scheduler": {
			"Type": "AWS::Scheduler::Schedule",
			"Properties": {
				"Name": {
					"Fn::Join": [
						"-",
						[
							"LunScheduler",
							{
								"Ref": "FileSystemId"
							}
						]
					]
				},
				"FlexibleTimeWindow": {
					"Mode": "OFF"
				},
				"ScheduleExpression": "rate(1 minute)",
				"Target": {
					"Arn": {
						"Fn::GetAtt": [
							"LambdaFunction",
							"Arn"
						]
					},
					"RoleArn": {
						"Fn::GetAtt": [
							"SchedulerRole",
							"Arn"
						]
					}
				}
			}
		},
		"Dashboard": {
			"Type": "AWS::CloudWatch::Dashboard",
			"Properties": {
				"DashboardBody": {
					"Fn::ToJsonString": {
						"variables": [
							{
								"type": "property",
								"property": "Path",
								"inputType": "select",
								"id": "Path",
								"label": "Path",
								"visible": true,
								"search": {
									"Fn::Sub": [
										"Netapp::FSx::Lun MetricName=LUN_IOPS_Read FileSystem=${FileSystemId}",
										{
											"FileSystemId": {
												"Ref": "FileSystemId"
											}
										}
									]
								},
								"populateFrom": "Path"
							}
						],
						"widgets": [
							{
								"height": 5,
								"width": 7,
								"y": 7,
								"x": 0,
								"type": "metric",
								"properties": {
									"sparkline": true,
									"view": "singleValue",
									"metrics": [
										[
											"Netapp::FSx::Lun",
											"LUN_Throughput_Read",
											"Path",
											"lun-path",
											"FileSystem",
											{
												"Ref": "FileSystemId"
											}
										]
									],
									"region": {
										"Ref": "AWS::Region"
									}
								}
							},
							{
								"height": 5,
								"width": 7,
								"y": 7,
								"x": 7,
								"type": "metric",
								"properties": {
									"metrics": [
										[
											"Netapp::FSx::Lun",
											"LUN_Throughput_Write",
											"Path",
											"lun-path",
											"FileSystem",
											{
												"Ref": "FileSystemId"
											}
										]
									],
									"sparkline": true,
									"view": "singleValue",
									"region": {
										"Ref": "AWS::Region"
									},
									"period": 300,
									"stat": "Average"
								}
							},
							{
								"height": 5,
								"width": 7,
								"y": 12,
								"x": 0,
								"type": "metric",
								"properties": {
									"sparkline": true,
									"view": "singleValue",
									"metrics": [
										[
											"Netapp::FSx::Lun",
											"LUN_IOPS_Read",
											"Path",
											"lun-path",
											"FileSystem",
											{
												"Ref": "FileSystemId"
											}
										]
									],
									"region": {
										"Ref": "AWS::Region"
									},
									"period": 300
								}
							},
							{
								"height": 5,
								"width": 7,
								"y": 7,
								"x": 14,
								"type": "metric",
								"properties": {
									"metrics": [
										[
											"Netapp::FSx::Lun",
											"LUN_Throughput_Total",
											"Path",
											"lun-path",
											"FileSystem",
											{
												"Ref": "FileSystemId"
											}
										]
									],
									"sparkline": true,
									"view": "singleValue",
									"region": {
										"Ref": "AWS::Region"
									},
									"period": 300,
									"stat": "Average"
								}
							},
							{
								"height": 5,
								"width": 7,
								"y": 12,
								"x": 7,
								"type": "metric",
								"properties": {
									"sparkline": true,
									"view": "singleValue",
									"metrics": [
										[
											"Netapp::FSx::Lun",
											"LUN_IOPS_Write",
											"Path",
											"lun-path",
											"FileSystem",
											{
												"Ref": "FileSystemId"
											}
										]
									],
									"region": {
										"Ref": "AWS::Region"
									}
								}
							},
							{
								"height": 5,
								"width": 7,
								"y": 12,
								"x": 14,
								"type": "metric",
								"properties": {
									"sparkline": true,
									"view": "singleValue",
									"metrics": [
										[
											"Netapp::FSx::Lun",
											"LUN_IOPS_Total",
											"Path",
											"lun-path",
											"FileSystem",
											{
												"Ref": "FileSystemId"
											}
										]
									],
									"region": {
										"Ref": "AWS::Region"
									}
								}
							},
							{
								"height": 5,
								"width": 7,
								"y": 17,
								"x": 0,
								"type": "metric",
								"properties": {
									"sparkline": true,
									"view": "singleValue",
									"metrics": [
										[
											"Netapp::FSx::Lun",
											"LUN_Latency_Read",
											"Path",
											"lun-path",
											"FileSystem",
											{
												"Ref": "FileSystemId"
											}
										]
									],
									"region": {
										"Ref": "AWS::Region"
									}
								}
							},
							{
								"height": 5,
								"width": 7,
								"y": 17,
								"x": 7,
								"type": "metric",
								"properties": {
									"sparkline": true,
									"view": "singleValue",
									"metrics": [
										[
											"Netapp::FSx::Lun",
											"LUN_Latency_Write",
											"Path",
											"lun-path",
											"FileSystem",
											{
												"Ref": "FileSystemId"
											}
										]
									],
									"region": {
										"Ref": "AWS::Region"
									}
								}
							},
							{
								"height": 5,
								"width": 7,
								"y": 17,
								"x": 14,
								"type": "metric",
								"properties": {
									"sparkline": true,
									"view": "singleValue",
									"metrics": [
										[
											"Netapp::FSx::Lun",
											"LUN_Latency_Total",
											"Path",
											"lun-path",
											"FileSystem",
											{
												"Ref": "FileSystemId"
											}
										]
									],
									"region": {
										"Ref": "AWS::Region"
									}
								}
							},
							{
								"height": 7,
								"width": 14,
								"y": 0,
								"x": 2,
								"type": "metric",
								"properties": {
									"view": "timeSeries",
									"stacked": false,
									"metrics": [
										[
											{
												"expression": {
													"Fn::Sub": [
														"SELECT SUM(LUN_Throughput_Write) FROM \"Netapp::FSx::Lun\" WHERE FileSystem = '${FileSystemId}' GROUP BY FileSystem, Path ORDER BY SUM() DESC LIMIT 5",
														{
															"FileSystemId": {
																"Ref": "FileSystemId"
															}
														}
													]
												},
												"label": "Path",
												"id": "q1",
												"region": {
													"Ref": "AWS::Region"
												}
											}
										]
									],
									"region": {
										"Ref": "AWS::Region"
									},
									"stat": "Sum",
									"period": 300,
									"title": "Top 5 Throughput paths"
								}
							}
						]
					}
				},
				"DashboardName": {
					"Fn::Join": [
						"-",
						[
							"LunDashboard",
							{
								"Ref": "FileSystemId"
							}
						]
					]
				}
			}
		}
	}
}