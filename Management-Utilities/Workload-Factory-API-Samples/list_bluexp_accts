#!/bin/bash
#
# This script is used to list all the BlueXP accounts that a user has
# access to. 
#
# It is dependent on the 'wf_utils' file that is included in this repo. That
# file contains the 'get_token' function that is used to obtain a valid
# access token that is needed to run the Workload Factory APIs. The file needs
# to either be in the command search path or in the current directory.
################################################################################

################################################################################
# Display usage information then exits the script.
################################################################################
usage () {
  cat >&2 <<EOF
This script is used to list all the BlueXP accounts (a.k.a. organizations)
that you have access to.

Usage is: $(basename $0) -t refresh_token 

Where: refresh_token - Is a refresh token used to obtain an access token needed
                       to run the Workload Factory APIs. You can obtain a refresh
                       token by going to https://services.cloud.netapp.com/refresh-token

Note, instead of passing parameters on the command line, you can set the
following environment variables instead:

    export REFRESH_TOKEN=<refresh_token>
EOF
  exit 1
}

tmpout=/tmp/list_accounts-out.$$
tmperr=/tmp/list_accounts-err.$$
trap 'rm -f $tmpout $tmperr' exit
#
# Source the wf_utils file.
wf_utils=$(command -v wf_utils)
if [ -z "$wf_utils" ]; then
  if [ ! -x "./wf_utils" ]; then
    cat <<EOF >&2
Error: The 'wf_utils' script was not found in the current directory or in the command search path.
It is required to run this script. You can download it from:
https://github.com/NetApp/FSx-ONTAP-samples-scripts/tree/main/Management-Utilities/Workload-Factory-API-Samples
EOF
    exit 1
  else
    wf_utils=./wf_utils
  fi
fi
. "$wf_utils"
#
# Parse the command line options.
while getopts ht: opt; do
  case $opt in
    t) REFRESH_TOKEN="$OPTARG" ;;
    *) usage ;;
  esac
done
#
# Declare an array of required options and the error message to display if they are not set.
declare -A required_options
required_options["REFRESH_TOKEN"]='Error: A BlueXP refresh tokon is required to run this script. It can be obtain from this web page:
  https://services.cloud.netapp.com/refresh-token\n\n'

check_required_options
#
# Check that the required commands are available.
for cmd in jq curl; do
  if ! command -v $cmd &> /dev/null; then
    echo "Error: The required command '$cmd' was not found. Please install it." >&2
    exit 1
  fi
done

token=$(get_token)
if [ -z "$token" ]; then
  echo "Error: Failed to obtain an access token. Exiting." >&2
  exit 1
fi

run_curl GET "$token" https://api.bluexp.netapp.com/v1/management/organizations $tmpout $tmperr
if jq -r '.items[] | "\(.name) \(.legacyId) \(.id)"' $tmpout > $tmperr; then
  cat $tmperr | column -t -N Name,ID,UUID
else
  echo "Error: Failed to parse the response from the API." >&2
  exit 1
fi
