#!/bin/bash
#
################################################################################
# This script is used to delete a SnapMirror relationship on a
# FSx for ONTAP file systems.
# 
# It is dependent on the 'wf_utils' file that is included in this repo. That
# file contains the 'get_token' function that is used to obtain a valid
# access token that is needed to run the Workload Factory APIs. The file needs
# to either be in the command search path or in the current directory.
################################################################################

################################################################################
# This function just prints the usage of this script and exits the program.
################################################################################
usage() {
  cat >&2 <<EOF
This script ill delete a SnapMirror relationship on a FSx for ONTAP file system.

Usage: $(basename $0) -t refresh_token -a blueXP_account_ID  -s snapmirror_ID \\
    -C source_credentials_id -R source_aws_region -F source_fs_id [-Y source_type] \\
    -c destionation_credentials_id -r destionation_aws_region -f destionation_fs_id [-y destination_type]

Where: refresh_token - Is a refresh token used to obtain an access token needed
                       to run the Workload Factory APIs. You can obtain a refresh
                       token by going to https://services.cloud.netapp.com/refresh-token
       blueXP_account_ID - is the BlueXP account ID. Run 'list_bluexp_accts' to get a
                           list of accounts you have access to
       snapmirror_ID - is the ID of the SnapMirror relationship to delete

       source_credentials_ID - is the Workload Factory credentials ID for the AWS account. Run
                               'list_credentials' to get a list of credentials you have access to
       source_aws_region - is the AWS region of the source file system
       source_fs_ID - is the file system ID of the FSx file system that is the source of the SnapMirror relationship
       source_type - is the file system type of the source cluster. Either 'FSx' or 'on-prem' (optional, defaults to "FSx")

       destination_credentials_ID - is the Workload Factory credentials ID for the AWS account. Run
                                    'list_credentials' to get a list of credentials you have access to
       destination_aws_region - is the AWS region where the destination file system is located
       destination_fs_ID - is the AWS file system ID of the file system that is the destionation of the relationship relationship
       destination_type - is the type of the destination file system. Either 'FSx' or 'on-prem' (optional, defaults to "FSx")

Instead of passing parameters on the command line, you can set the
following environment variables:

    export REFRESH_TOKEN=<refresh_token>
    export BLUEXP_ACCOUNT_ID=<blueXP_account_ID>
EOF
  exit 1
}

################################################################################
# Main logic starts here.
################################################################################
tmpout=$(mktemp /tmp/delete_mirror-out.XXXXXX)
tmperr=$(mktemp /tmp/delete_mirror-err.XXXXXX)
trap 'rm -f $tmpout $tmperr' exit

SOURCE_TYPE="FSx"
DESTINATION_TYPE="FSx"
THROTTLE=102400 # 100 MiB/s
SCHEDULE="hourly"
while getopts "ht:a:s:C:R:F:Y:c:r:f:y:" opt; do
  case $opt in
    t) REFRESH_TOKEN="$OPTARG" ;;
    a) BLUEXP_ACCOUNT_ID="$OPTARG" ;;
    s) SNAPMIRROR_ID="$OPTARG" ;;
    c) DESTINATION_CREDENTIALS_ID="$OPTARG" ;;
    r) DESTINATION_AWS_REGION="$OPTARG" ;;
    f) DESTINATION_FS_ID="$OPTARG" ;;
    y) DESTINATION_TYPE="$OPTARG" ;;
    C) SOURCE_CREDENTIALS_ID="$OPTARG" ;;
    R) SOURCE_AWS_REGION="$OPTARG" ;;
    F) SOURCE_FS_ID="$OPTARG" ;;
    Y) SOURCE_TYPE="$OPTARG" ;;
    *) usage ;;
  esac
done
#
# Check if the required parameters are set.
missing_args=false
if [ -z "$REFRESH_TOKEN" ]; then
  cat >&2 <<EOF
Error: A BlueXP refresh tokon is required to run this script.
Can you be obtain from this web page:

    https://services.cloud.netapp.com/refresh-token

EOF
  missing_args=true
fi

if [ -z "$BLUEXP_ACCOUNT_ID" ]; then
  cat >&2 <<EOF
Error: A BlueXP account is required to run this script.
You can get the list of accounts you have access to by running the "list_bluexp_accts" script
found in this GitHub repository: https://github.com/NetApp/FSx-ONTAP-samples-scripts/tree/main/Management-Utilities/Workload-Factory-API-Samples

EOF
  missing_args=true
fi

if [[ -z "$DESTINATION_CREDENTIALS_ID" || -z "$SOURCE_CREDENTIALS_ID" ]]; then
  cat >&2 <<EOF
Error: The source and destination Workload Factory credentials IDs are required to run this script.
You can get the list of credentials you have access to by running the "list_credentials" script
found in this GitHub repository: https://github.com/NetApp/FSx-ONTAP-samples-scripts/tree/main/Management-Utilities/Workload-Factory-API-Samples

EOF
  missing_args=true
fi

if [[ -z "$DESTINATION_AWS_REGION" || -z "$SOURCE_AWS_REGION" ]]; then
  cat >&2 <<EOF
Error: The source and destination AWS regions are required to run this script.

EOF
  missing_args=true
fi 

if [[ -z "$DESTINATION_FS_ID" || -z "$SOURCE_FS_ID" ]]; then
  cat >&2 <<EOF
Error: The source and destination FSx file system IDs are required to run this script.
You can get the list of file systems you have access to by running the "list_filesystems" script
found in this GitHub repository: https://github.com/NetApp/FSx-ONTAP-samples-scripts/tree/main/Management-Utilities/Workload-Factory-API-Samples

EOF
  missing_args=true
fi

if [[ -z "$SNAPMIRROR_ID" ]]; then
  cat >&2 <<EOF
Error: The SnapMirror ID is required to run this script.
You can get the list of snapmirror IDs by running the "list_snapmirrors" script
found in this GitHub repository: https://github.com/NetApp/FSx-ONTAP-samples-scripts/tree/main/Management-Utilities/Workload-Factory-API-Samples

EOF
  missing_args=true
fi

if [ "$missing_args" != "false" ];  then
  usage
fi
#
# Check that the parameters are valid.
case "$SOURCE_TYPE" in
  "FSx") SOURCE_TYPE="FileSystem" ;;
  "on-prem") SOURCE_TYPE="OnPrem" ;;
  *) echo "Error: Invalid destination type '$SOURCE_TYPE'. Must be either 'FSx' or 'on-prem'." >&2
    usage ;;
esac
case "$DESTINATION_TYPE" in
  "FSx") DESTINATION_TYPE="FileSystem" ;;
  "on-prem") DESTINATION_TYPE="OnPrem" ;;
  *) echo "Error: Invalid destination type '$DESTINATION_TYPE'. Must be either 'FSx' or 'on-prem'." >&2
    usage ;;
esac
#
# Source the wf_utils file.
wf_utils=$(command -v wf_utils)
if [ -z "$wf_utils" ]; then
  if [ ! -x "./wf_utils" ]; then
    cat >&2 <<EOF
Error: The 'wf_utils' script was not found in the current directory or in the command search path.
It is required to run this script. You can download it from:
https://github.com/NetApp/FSx-ONTAP-samples-scripts/tree/main/Management-Utilities/Workload-Factory-API-Samples
EOF
    exit 1
  else
    wf_utils=./wf_utils
  fi
fi
. "$wf_utils"
#
# Check that the required commands are available.
for cmd in jq curl; do
  if ! command -v $cmd &> /dev/null; then
    echo "Error: The required command '$cmd' was not found. Please install it." >&2
    exit 1
  fi
done

token=$(get_token)
if [ -z "$token" ]; then
  echo "Error: Failed to obtain an access token. Exiting." >&2
  exit 1
fi

run_curl POST "$token" "https://api.workloads.netapp.com/accounts/${BLUEXP_ACCOUNT_ID}/fsx/v2/replication/${DESTINATION_CREDENTIALS_ID}/regions/${DESTINATION_AWS_REGION}/file-systems/${DESTINATION_FS_ID}/relationships/${SNAPMIRROR_ID}/delete" \
  $tmpout $tmperr \
  '{"source": {
      "type":"'${SOURCE_TYPE}'",
      "id":"'${SOURCE_FS_ID}'",
      "credentialsId":"'${SOURCE_CREDENTIALS_ID}'",
      "region":"'${SOURCE_AWS_REGION}'"
    }
  }'
