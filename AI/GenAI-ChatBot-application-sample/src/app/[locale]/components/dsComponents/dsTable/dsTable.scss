@use '../../../styles/mixins.scss' as *;

.dsTable {
    position: relative;
    display: flex;
    flex-direction: column;
    min-height: 56px;
    padding: 0 5px;
    width: 100%;
    opacity: 0;
    @include transition(opacity 0.2s ease);

    &.isVisible {
        opacity: 1;
    }

    &.table-light {
        .tableCardContent {
            box-shadow: none;

            tr {
                background-color: var(--background-main);
                border-bottom-color: var(--background-content);

                &.rowHeader {
                    border-color: var(--background-content);
                }

                &:not(&.isDisabled) {
                    &.rowHeader {

                        &:hover,
                        &.isSelected {
                            background-color: var(--background-hover);
                        }
                    }
                }

                td {
                    &.dsCell {
                        &.dsHeaderCell {
                            background-color: var(--background-content);
                        }
                    }
                }
            }
        }

        .dsTableFooter {
            box-shadow: none;
        }
    }

    .tableCardContent {
        padding: 0;
        margin-bottom: 6px;
        width: 100%;

        &.isHorizontalScroll {
            overflow-x: auto;
            margin-bottom: 0;

            .tableElement {
                thead {
                    top: 0;
                }
            }

            @include hideScrollbar();
        }

        &.showPagination {
            margin-bottom: 0;
        }

        &.maxHeight {
            @include hideScrollbar();
            overflow-y: auto;

            thead {
                top: 0;
            }
        }

        &.isHeaderHidden {
            .tableElement {
                thead {
                    top: 0;
                }
            }
        }

        table,
        th,
        td {
            border-collapse: collapse;
        }

        tr {
            border-bottom: 1px solid var(--border-main);
        }

        thead {
            position: sticky;
            top: 89px;

            tr {
                .dsCell {
                    &.manageColumns {
                        .manageColumnsIcon {
                            position: relative;
                            top: 3px;
                            cursor: pointer;

                            path {
                                fill: var(--icon-primary);
                            }

                            &:hover {
                                path {
                                    fill: var(--icon-primary-hover);
                                }
                            }
                        }
                    }

                    &.isLastAndNoExtraCols {
                        .cellContent {
                            .headerCellContent {
                                .cellActions {
                                    .resizeElement {
                                        pointer-events: none;
                                        opacity: 0;
                                    }
                                }
                            }
                        }
                    }

                    .headerCellContent {
                        display: flex;
                        flex-direction: row;
                        align-items: center;
                        justify-content: space-between;
                        width: 100%;
                    }
                }
            }
        }

        tbody {
            tr {
                position: relative;

                &:not(&.isDisabled) {
                    &.rowHeader {

                        &:hover,
                        &.isSelected {
                            background-color: var(--background-hover);

                            .freezed {
                                background-color: inherit;
                            }
                        }

                        &.isExpandable {
                            cursor: pointer;
                        }
                    }
                }

                &.expandedRowContainer {
                    border-bottom-width: 0;
                    @include transition(border-bottom-width 0.4s ease);

                    &.isExpanded {
                        border-bottom-width: 1px;

                        td {
                            .expandedCellContainer {
                                max-height: 400px;
                                min-height: 50px;
                            }
                        }
                    }

                    td {
                        padding: 0;

                        .expandedCellContainer {
                            max-height: 0;
                            min-height: 0;
                            overflow: hidden;
                            @include transition(max-height 0.4s ease-in-out, min-height 0.4s ease-in-out);
                            @include showScrollbarY();
                        }
                    }
                }

                .extraActionsContainer {
                    display: flex;

                    .chevronIcon {
                        color: var(--icon-tertiary);
                        width: 20px;
                        @include transition(transform 0.3s ease);

                        &.isExpanded {
                            @include rotate(180deg);
                        }

                        &.isDisabled {
                            color: var(--icon-tertiary-disabled);
                        }
                    }
                }
            }
        }

        .tableElement {
            width: 100%;
        }

        .emptyTableContainer {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 300px;
            position: sticky;
            left: 0;

            .emptyContent {
                color: var(--text-secondary);
            }
        }
    }
}